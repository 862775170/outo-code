#set($doller="$")
<template>
<div>
  <el-row>
    <el-col>
      <div style="border:2px solid #F2F6FC;">
        <h3 class="zhong-wen-zi-ti" style="margin: 10px 0 10px 20px;">#if("${table.comment}" != "")${table.comment}#{else}${entity}#end</h3></div>
    </el-col>
  </el-row>
  <el-row>
    <el-col>
      <div style="margin-left:20px;margin-top:5px">
        <el-button size="mini" type="danger" icon="el-icon-plus" @click="handleAdd">添加</el-button>
      </div>
    </el-col>
  </el-row>
  <el-table
    :data="tableData"
    style="width: 100%"
    :default-sort = "{prop: '${cfg.pk.propertyName}', order: 'descending'}"
    >
#foreach($field in ${table.fields})
    <el-table-column
      prop="${field.propertyName}"
      label="#if("$!field.comment" != "")${field.comment}#else/${field.propertyName}#end"
      sortable>
    </el-table-column>
#end
    <el-table-column label="操作" width="240">
      <template slot-scope="scope">
        <el-button
          size="mini"
          type="primary"
          @click="handleShow(scope.$index, scope.row)">查看</el-button>
        <el-button
          size="mini"
          type="warning"
          @click="handleEdit(scope.$index, scope.row)">编辑</el-button>
        <el-button
          size="mini"
          type="danger"
          @click="handleDelete(scope.$index, scope.row)">删除</el-button>
      </template>
    </el-table-column>
  </el-table>
  <div class="block">
    <el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="currentPage" :page-sizes="pageSizes" :page-size="pageSize" layout="total, sizes, prev, pager, next, jumper" :total="total">
    </el-pagination>
  </div>
  <el-dialog :title="dialogTitle" :visible.sync="dialogVisible" width="30%" :before-close="handleClose">
    <div v-if="dialogAction == 'edit'">
      <vEdit @refreshList="dialogClose" :fromData="fromData"></vEdit>
    </div>
    <div v-if="dialogAction == 'add'">
      <vAdd @refreshList="dialogClose"></vAdd>
    </div>
    <div v-if="dialogAction == 'show'">
      <vShow @refreshList="dialogClose" :fromData="fromData"></vShow>
    </div>
  </el-dialog>
</div>
</template>

<script>
import vEdit from "./Edit.vue";
import vAdd from "./Add.vue";
import vShow from "./Show.vue";
  export default {
    data() {
      return {
        oldTableData:[],  // 原数据
        tableData: [],    // 表格展示数据
        fromData: {},     // 编辑回显数据
        dialogVisible: false, // 默认dialog 不显示
        dialogTitle:"",  //dialog 标题
        dialogAction:"",   //dialog 操作
        currentPage: 1,   // 当前页
        pageSizes: [10, 20, 50, 100], // 页面大小
        pageSize: 10, // 每页大小
        total: 0,   //总行数
      }
    },
    components:{
      vEdit,    // 编辑组件
      vAdd,      // 新增组件
      vShow     //查看详情
    },
    created(){
        //创建组件调用钩子
      this.getTableData();
    },
    methods: {
      getTableData(){
        //加载页面获取表格
        this.${doller}http.get("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end/getAll").then(response => {
          console.log(response);
          this.oldTableData=response.data.data;
          this.total = this.oldTableData.length;

          let start = (this.currentPage - 1) * this.pageSize;
          //console.log("start:" + start);
          let end = this.currentPage * this.pageSize;
          //console.log("start:" + end);
          let tem = this.oldTableData.slice(start, end);
          //console.log(tem);
          this.tableData = tem;
        }).catch(error => {
          console.log(error);
        });
      },
      handleSizeChange(val) {
        //修改 pageSize 重新计算
        //console.log(`每页 ${val} 条`);
        this.pageSize = val;
        let start = (this.currentPage - 1) * this.pageSize;
        //console.log("start:" + start);
        let end = this.currentPage * this.pageSize;
        //console.log("start:" + end);
        let tem = this.oldTableData.slice(start, end);
        //console.log(tem);
        this.tableData = tem;
      },
      handleCurrentChange(val) {
        // 分页 修改当前页事件 触发
        this.currentPage = val;
        let start = (this.currentPage - 1) * this.pageSize;
        let end = this.currentPage * this.pageSize;
        let tem = this.oldTableData.slice(start, end);
        this.tableData = tem;
      },
      handleEdit(index, row) {
        //编辑一条记录
        console.log(index, row);
        this.${doller}http.get("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end/getBykey?${cfg.pk.propertyName}="+row.${cfg.pk.propertyName}).then(response => {
          console.log(response);
          this.fromData=response.data.data;
          this.dialogTitle="编辑";
          this.dialogAction="edit";
          this.dialogVisible=true;
        }).catch(error => {
          console.log(error);
        });
      },
      handleShow(index, row){
        //编辑一条记录
        console.log(index, row);
        this.${doller}http.get("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end/getBykey?${cfg.pk.propertyName}="+row.${cfg.pk.propertyName}).then(response => {
          console.log(response);
          this.fromData=response.data.data;
          this.dialogTitle="查看详情";
          this.dialogAction="show";
          this.dialogVisible=true;
        }).catch(error => {
          console.log(error);
        });
      },
      handleDelete(index, row) {
        console.log(index, row);
        //删除一条记录
        this.$confirm('确认删除？')
          .then(_ => {
            this.${doller}http.delete("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end?${cfg.pk.propertyName}="+row.${cfg.pk.propertyName}).then(response => {
              console.log(response);
              this.dialogClose();
            }).catch(error => {
              console.log(error);
            });
          })
          .catch(_ => {});
        
      },
      handleAdd(){
        //弹出新增表单
        this.dialogTitle="添加";
        this.dialogAction="add";
        this.dialogVisible=true;
      },
      handleClose(done) {
        //弹出框X 事件关闭
        if(this.dialogAction=="show"){
          done();
        }else{
          this.$confirm('确认关闭？')
            .then(_ => {
              done();
            })
            .catch(_ => {});
        }
      },
      dialogClose(){
        //关闭弹出框
        this.fromData={};
        this.dialogTitle="";
        this.dialogAction="";
        this.dialogVisible=false;
        this.getTableData();
      }
    }
  }
</script>